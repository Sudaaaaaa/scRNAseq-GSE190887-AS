seurat_obj <- CreateSeuratObject(counts = mm)  # no filter thresholds applied

ct <- ct[match(colnames(mm), rownames(ct)), ]
seurat_obj@meta.data$orig.ident <- ct$sample
seurat_obj@meta.data$celltype <- ct$celltype0421

seurat_obj <- PercentageFeatureSet(seurat_obj, "^mt-", col.name = "percent_mito")
seurat_obj <- PercentageFeatureSet(seurat_obj, "^Rp[sl]", col.name = "percent_ribo")
seurat_obj <- PercentageFeatureSet(seurat_obj, "^Hb[ab]", col.name = "percent_hemo")
seurat_obj$log10GenesPerUMI <- log10(seurat_obj$nFeature_RNA) / log10(seurat_obj$nCount_RNA)

saveRDS(seurat_obj, paste0("010-99.SO_RAW.rds"))
seurat_obj <- readRDS("010-99.SO_RAW.rds")

seurat_obj1 <- NormalizeData(seurat_obj)
seurat_obj1 <- FindVariableFeatures(
  seurat_obj1,
  selection.method = "vst",
  nfeatures = 3000,
  verbose = FALSE
)
seurat_obj1 <- ScaleData(
  seurat_obj1,
  features = VariableFeatures(seurat_obj1),
  do.center = TRUE, do.scale = TRUE,
  verbose = FALSE
)
seurat_obj1 <- RunPCA(
  seurat_obj1,
  features = VariableFeatures(seurat_obj1),
  npcs = 50,
  verbose = FALSE
)
seurat_obj1 <- FindNeighbors(
  seurat_obj1,
  dims = 1:35,
  k.param = 50,
  reduction = "pca"
)
#alg <- if (packageVersion("igraph") >= "1.3.0") 4 else 3  # 4=Leiden, else SLM
seurat_obj1 <- FindClusters(
  seurat_obj1,
  resolution = c(0.4),  # store multiple to choose later
  algorithm = 3,                       # Leiden (fall back to 3 if Leiden not installed)
  verbose = FALSE,
  cluster.name = "unintegrated_clusters"
)
seurat_obj1 <- RunUMAP(
  seurat_obj1,
  dims = 1:35,
  reduction = "pca",
  reduction.name = "umap.unintegrated",
  n.neighbors = 50,
  min.dist = 0.2,
  metric = "cosine",
  seed.use = 1234
)
DimPlot(seurat_obj1, reduction = "umap.unintegrated", group.by = "celltype", raster=FALSE)

saveRDS(seurat_obj1, paste0("010-99.SO1_NORM1.rds"))
seurat_obj1 <- readRDS("010-99.SO1_NORM1.rds")
